{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/Player.svelte",
    "../src/PointsTable.svelte",
    "../src/App.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  export let country;\n  export let points;\n  export let flag;\n  let showControls = false;\n\n  const addPoint = () => (points += 1);\n  const removePoint = () => (points -= 1);\n</script>\n\n<style>\n  h1 {\n    color: #204f6e;\n  }\n\n  h3 {\n    margin-bottom: 10px;\n  }\n</style>\n\n<div class=\"card\">\n  <h1>\n    {flag} {country}\n  </h1>\n  <h3>Points: {points}</h3>\n</div>\n",
    "<script>\n\texport let tableData = [\n\t\t\t{\n\t\t\t\tvitae : \"dolorem\",\n\t\t\t\tlectus : \"ipsum\",\n\t\t\t\tquisquam : \"quia\"\n\t\t\t},\n\t\t\t{\n\t\t\t\tvitae : \"amet\",\n\t\t\t\tlectus : \"consectetur\",\n\t\t\t\tquisquam : \"adipisci\"\n\t\t\t}\n\t\t];\n</script>\n\n<table>\n\t<thead>\n\t\t<!-- <tr>\n\t\t\t{#each Object.keys(tableData[0]) as columnHeading}\n\t\t\t\t<th>{columnHeading}</th>\n\t\t\t{/each}\n\t\t<tr/> -->\n\t</thead>\n\t<tbody>\n\t\t{#each Object.values(tableData) as row}\n\t\t\t<tr>\n\t\t\t\t{#each Object.values(row) as cell}\n\t\t\t\t\t<td>{cell}</td>\n\t\t\t\t{/each}\n\t\t\t</tr>\n\t\t{/each}\n\t</tbody>\n</table>\n\n<style>\n  table, td {\n    border: 1px solid;\n    border-collapse: collapse;\n    margin: 10px;\n  }\n</style>",
    "<script>\n\timport { participantsArray } from './../voting/participants';\n  import { pointFromArray } from './../voting/points-from';\n\timport { get } from 'svelte/store';\n\timport Navbar from \"./Navbar.svelte\";\n  import countryFlagEmoji from \"country-flag-emoji\";\n  import lodash from \"lodash\";\n\n\n  const participants = get(participantsArray);\n  const pointFrom = get(pointFromArray);\n  const votingLength = [...Array(pointFrom.length).keys()];\n  let country_code = [];\n  let name = [];\n  let points = [];\n  let givesPoints = \"\"\n\n  function initalizeParticipants(array) {\n\t\tarray.forEach(el => {\n\t\tel.value ++;\n\t\tcountry_code.push(el.CountryCode);\n    name.push(el.Name);\n    points.push(lodash.sum(el.Points));\n\t})\n\t}\n\n  initalizeParticipants(participants);\n\n  function andThePointsGoTo(array, index){\n      const row = array[index];\n\n      givesPoints = row.Name;\n      const object = row.Points\n      for (const property in object) {\n        console.log(`${object[property]} points go to ${property}`);\n\n        points[name.indexOf(property)] = points[name.indexOf(property)] + object[property];\n        console.log(points);\n      }\n\n  }\n</script>\n\n<Navbar />\n<div class=\"container\">\n  <div class=\"card\">\n    <table>\n      <tbody>\n        {#each country_code as c, i}\n        <tr>\n          <td>{countryFlagEmoji.get(country_code[i]).emoji}</td>\n          <td>{name[i]}</td>\n          <td>{points[i]}</td>\n        </tr>\n        {/each}\n      </tbody>\n    </table>\n  </div>\n  <div class=\"card\">\n    <p>Points from {givesPoints}</p>\n  </div>\n  <div class=\"card\">\n    <button on:click={() => andThePointsGoTo(pointFrom, votingLength.pop()) }>Give points</button>\n  </div>\n</div>\n\n\n<style>\n  table, td {\n    border: 1px solid;\n    border-collapse: collapse;\n    margin: 10px;\n  }\n\n  .container {\n  column-width: 250px;\n  column-gap: 20px;\n}\n\n.card {\n  background-color: white;\n  border: 2px solid white;\n  padding: 10px;\n  margin: 0 0 1em 0;\n}\n\n\n</style>"
  ],
  "names": [],
  "mappings": "AAeE,EAAE,eAAC,CAAC,AACF,KAAK,CAAE,OAAO,AAChB,CAAC,AAED,EAAE,eAAC,CAAC,AACF,aAAa,CAAE,IAAI,AACrB,CAAC;ACcD,oBAAK,CAAE,EAAE,eAAC,CAAC,AACT,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,eAAe,CAAE,QAAQ,CACzB,MAAM,CAAE,IAAI,AACd,CAAC;AC6BD,mBAAK,CAAE,EAAE,cAAC,CAAC,AACT,MAAM,CAAE,GAAG,CAAC,KAAK,CACjB,eAAe,CAAE,QAAQ,CACzB,MAAM,CAAE,IAAI,AACd,CAAC,AAED,UAAU,cAAC,CAAC,AACZ,YAAY,CAAE,KAAK,CACnB,UAAU,CAAE,IAAI,AAClB,CAAC,AAED,KAAK,cAAC,CAAC,AACL,gBAAgB,CAAE,KAAK,CACvB,MAAM,CAAE,GAAG,CAAC,KAAK,CAAC,KAAK,CACvB,OAAO,CAAE,IAAI,CACb,MAAM,CAAE,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,AACnB,CAAC"
}